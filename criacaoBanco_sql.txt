-- Criação da tabela Permissao
CREATE TABLE Permissao (
    id INT PRIMARY KEY AUTO_INCREMENT,
    tipoPermissao VARCHAR(50) UNIQUE NOT NULL
);

-- Criação da tabela Pessoa
CREATE TABLE Pessoa (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nomeCompleto VARCHAR(255) NOT NULL,
    cpf VARCHAR(14) UNIQUE NOT NULL,   -- Alterado para VARCHAR
    endereco VARCHAR(255),
    telefone VARCHAR(15),              -- Alterado para VARCHAR
    email VARCHAR(255),                -- Alterado para VARCHAR
    dataNascimento DATE,
    tipoPermissaoId INT,               -- Referência para tipo de permissão
    status BOOLEAN,
    FOREIGN KEY (tipoPermissaoId) REFERENCES Permissao(id) -- FK para Permissão
);

-- Criação da tabela Aluno
CREATE TABLE Aluno (
    id INT PRIMARY KEY AUTO_INCREMENT,
    categoriaCNH VARCHAR(10),              -- Alterado para VARCHAR
    statusPagamento VARCHAR(20),           -- Alterado para VARCHAR
    statusCurso VARCHAR(20),               -- Alterado para VARCHAR
    statusAluno BOOLEAN,
    pessoaId INT,                          -- FK para Pessoa
    FOREIGN KEY (pessoaId) REFERENCES Pessoa(id)  -- Relacionando a pessoa
);

-- Criação da tabela Instrutor
CREATE TABLE Instrutor (
    id INT PRIMARY KEY AUTO_INCREMENT,
    categoriaCNH VARCHAR(10),              -- Alterado para VARCHAR
    dataAdmissao DATE,
    statusInstrutor BOOLEAN,
    pessoaId INT,                          -- FK para Pessoa
    FOREIGN KEY (pessoaId) REFERENCES Pessoa(id)  -- Relacionando a pessoa
);

-- Criação da tabela Aulas
CREATE TABLE Aulas (
    id INT PRIMARY KEY AUTO_INCREMENT,
    tipoAula VARCHAR(50),                  -- Alterado para VARCHAR
    descricao VARCHAR(255)
);

-- Criação da tabela Veiculo
CREATE TABLE Veiculo (
    id INT PRIMARY KEY AUTO_INCREMENT,
    placa VARCHAR(10) UNIQUE NOT NULL,      -- Alterado para VARCHAR
    modelo VARCHAR(50),
    marca VARCHAR(50),
    anoFabricacao YEAR,                    -- Alterado para YEAR
    categoria VARCHAR(10),                 -- Alterado para VARCHAR
    dataAquisicao DATE,
    statusVeiculo VARCHAR(20)              -- Alterado para VARCHAR
);

-- Criação da tabela Agendamento
CREATE TABLE Agendamento (
    id INT PRIMARY KEY AUTO_INCREMENT,
    data DATE,
    horario TIME,
    horaFim INT,
    aulaId INT,
    instrutorId INT,
    alunoId INT,
    veiculoId INT,
    statusAula VARCHAR(20),                -- Alterado para VARCHAR
    statusComparecimento VARCHAR(20),      -- Alterado para VARCHAR
    resultadoProva VARCHAR(20),            -- Alterado para VARCHAR
    FOREIGN KEY (aulaId) REFERENCES Aulas(id),
    FOREIGN KEY (instrutorId) REFERENCES Instrutor(id),
    FOREIGN KEY (alunoId) REFERENCES Aluno(id),
    FOREIGN KEY (veiculoId) REFERENCES Veiculo(id)
);

-- Criação da tabela HistoricoAula
CREATE TABLE HistoricoAula (
    id INT PRIMARY KEY AUTO_INCREMENT,
    alunoId INT,
    instrutorId INT,
    veiculoId INT,
    dataAula DATE,
    statusAula VARCHAR(20),                -- Alterado para VARCHAR
    resultadoProva VARCHAR(20),            -- Alterado para VARCHAR
    FOREIGN KEY (alunoId) REFERENCES Aluno(id),
    FOREIGN KEY (instrutorId) REFERENCES Instrutor(id),
    FOREIGN KEY (veiculoId) REFERENCES Veiculo(id)
);

-- Criação da tabela Pagamento
CREATE TABLE Pagamento (
    id INT PRIMARY KEY AUTO_INCREMENT,
    valorTotal DOUBLE,
    dataPagamento DATE,
    statusPagamento VARCHAR(20),           -- Alterado para VARCHAR
    formaPagamento VARCHAR(20),            -- Alterado para VARCHAR
    alunoId INT,
    FOREIGN KEY (alunoId) REFERENCES Aluno(id)
);

-- Criação da tabela Parcelas
CREATE TABLE Parcelas (
    id INT PRIMARY KEY AUTO_INCREMENT,
    numeroParcela INT,
    valor FLOAT,
    statusParcela VARCHAR(20),             -- Alterado para VARCHAR
    dataVencimento DATE,
    pagamentoId INT,
    FOREIGN KEY (pagamentoId) REFERENCES Pagamento(id)
);

-- Criação da tabela Notificacao
CREATE TABLE Notificacao (
    id INT PRIMARY KEY AUTO_INCREMENT,
    agendamentoId INT,                     -- ID do Agendamento
    tipoNotificacao VARCHAR(50),           -- Tipo de notificação (ex: 'Lembrete', 'Alteração', etc.)
    mensagem VARCHAR(255),                 -- Mensagem da notificação
    statusNotificacao VARCHAR(20),         -- Status da notificação (ex: 'Enviada', 'Pendente', etc.)
    dataEnvio DATE,                        -- Data de envio da notificação
    meioEnvio VARCHAR(50),                 -- Meio de envio (ex: 'Email', 'SMS')
    alunoId INT,                           -- FK para o aluno
    instrutorId INT,                       -- FK para o instrutor
    FOREIGN KEY (agendamentoId) REFERENCES Agendamento(id),
    FOREIGN KEY (alunoId) REFERENCES Aluno(id),
    FOREIGN KEY (instrutorId) REFERENCES Instrutor(id)
);
